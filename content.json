{"meta":{"title":"youxiafuture","subtitle":null,"description":null,"author":"游侠","url":"http://youxiafuture.github.io","root":"/"},"pages":[{"title":"categories","date":"2022-10-19T07:04:22.000Z","updated":"2022-10-19T07:09:22.219Z","comments":true,"path":"categories/index.html","permalink":"http://youxiafuture.github.io/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2017-11-14T01:18:32.000Z","updated":"2017-11-14T01:18:32.395Z","comments":true,"path":"about/index.html","permalink":"http://youxiafuture.github.io/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-10-19T11:43:33.000Z","updated":"2022-10-19T11:44:07.304Z","comments":true,"path":"tags/index.html","permalink":"http://youxiafuture.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"了解iptables","slug":"networking001","date":"2017-11-15T02:37:15.000Z","updated":"2017-11-16T02:10:10.559Z","comments":true,"path":"2017/11/15/networking001/","link":"","permalink":"http://youxiafuture.github.io/2017/11/15/networking001/","excerpt":"","text":"【参考】https://wiki.archlinux.org/index.php/Simple_stateful_firewall 查看已有策略iptables-save 或 iptables -nvL --line-numbers 重置至默认规则# 在centos里没找到这个default文件，使用其他方法 iptables-restore &lt; /etc/iptables/empty.rules 单台机器的防火墙The FORWARD chainThe OUTPUT chainThe INPUT chain","categories":[],"tags":[{"name":"nat","slug":"nat","permalink":"http://youxiafuture.github.io/tags/nat/"},{"name":"iptables","slug":"iptables","permalink":"http://youxiafuture.github.io/tags/iptables/"},{"name":"network","slug":"network","permalink":"http://youxiafuture.github.io/tags/network/"}]},{"title":"Git获取分支对应tag","slug":"gitlearning001","date":"2017-11-14T08:00:49.000Z","updated":"2017-11-14T08:17:53.618Z","comments":true,"path":"2017/11/14/gitlearning001/","link":"","permalink":"http://youxiafuture.github.io/2017/11/14/gitlearning001/","excerpt":"","text":"1.获取所有taggit tag 2.获取当前分支所有tag# 只能通过git log曲线救国了 git log --simplify-by-decoration --decorate --pretty=oneline | fgrep &#39;tag: &#39; # 结果包含了commit ID和log信息，可以根据需求再进一步过滤 # 比如输出以beta结尾的tag信息，sed很好用 git log --simplify-by-decoration --decorate --pretty=oneline | \\ fgrep &#39;tag: &#39; | \\ sed -n &#39;s/^\\([0-9a-z]*\\)[ ].*tag:[ ]\\(.*\\)_beta.*/\\2:\\1/p&#39;","categories":[{"name":"git","slug":"git","permalink":"http://youxiafuture.github.io/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://youxiafuture.github.io/tags/git/"},{"name":"shell","slug":"shell","permalink":"http://youxiafuture.github.io/tags/shell/"}]},{"title":"Python学习笔记－004","slug":"forpython003","date":"2016-04-20T02:07:57.000Z","updated":"2017-11-13T03:19:41.860Z","comments":true,"path":"2016/04/20/forpython003/","link":"","permalink":"http://youxiafuture.github.io/2016/04/20/forpython003/","excerpt":"","text":"#Python基础","categories":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/tags/python/"}]},{"title":"Python学习笔记－003","slug":"forpython002","date":"2016-04-19T08:52:49.000Z","updated":"2017-11-13T03:19:43.613Z","comments":true,"path":"2016/04/19/forpython002/","link":"","permalink":"http://youxiafuture.github.io/2016/04/19/forpython002/","excerpt":"","text":"#1 协同过滤##1.1 曼哈顿距离 ##1.2 欧氏距离-毕达哥拉斯定理（勾股定理）","categories":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/tags/python/"},{"name":"Data mining","slug":"Data-mining","permalink":"http://youxiafuture.github.io/tags/Data-mining/"}]},{"title":"Python学习笔记－002","slug":"forpython001","date":"2016-01-27T02:04:15.000Z","updated":"2017-11-13T03:18:59.671Z","comments":true,"path":"2016/01/27/forpython001/","link":"","permalink":"http://youxiafuture.github.io/2016/01/27/forpython001/","excerpt":"","text":"#1、Differences between Python 2.7 and 3##1.1 printIn Python 2.7, print is a keyword which behaves differently from other functions. In Python 3, print behaves like most functions. The standard use in Python 2.7 is print &#39;String to Print&#39; while in Python 3 the standard use is print(’String to Print’) Python 2.7 contains a version of the Python 3 print, which can be used in any program by including from __future__ import print_function ##1.2 divisionIn Python 2.7, the ratio of two integers was always an integer, and so results are truncated towards 0 if the result was fractional.Python 3 gracefully converts the result to a floating point number. Python 2.7 can use the Python 3 behavior by including from future import division ##1.3 range and xrangeIn Python 2.7, the best practice is to use the keyword xrange to do this, while in Python 3, this keyword has been renamed range. ##1.4 Unicode strings Python 3 treats all strings as unicode unlike Python 2.7 where characters are a single byte, and unicode strings require the special syntax u’unicode string’ or unicode(’unicode string’).If working in a lan- guage where characters outside of the standard but limited 128 character set are commonly encountered, it may be useful to use from future import unicode_literalsto will help with future compatibility when moving to Python 3.","categories":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/tags/python/"}]},{"title":"Emacs/Vi学习笔记－001","slug":"learnemacs001","date":"2016-01-06T15:44:22.000Z","updated":"2016-03-23T16:32:20.000Z","comments":true,"path":"2016/01/06/learnemacs001/","link":"","permalink":"http://youxiafuture.github.io/2016/01/06/learnemacs001/","excerpt":"","text":"","categories":[],"tags":[{"name":"emacs","slug":"emacs","permalink":"http://youxiafuture.github.io/tags/emacs/"},{"name":"vi","slug":"vi","permalink":"http://youxiafuture.github.io/tags/vi/"}]},{"title":"Python学习笔记－001","slug":"learnPython001","date":"2016-01-06T15:44:22.000Z","updated":"2016-03-23T16:25:09.000Z","comments":true,"path":"2016/01/06/learnPython001/","link":"","permalink":"http://youxiafuture.github.io/2016/01/06/learnPython001/","excerpt":"","text":"前言 学习Python主要是最近要用一个python实现的爬虫引擎，去获取play store上的应用信息 另外为了进一步熟悉使用emacs，所以用emacs来做为编辑工具 参考资料 Dash Python2.7.11 Documentation 快速入门: http://blog.jobbole.com/43922/ 1.初步认识 解释性语言，面向对象 强类型，隐式类型 动态型 大小写敏感 2.如何使用帮助 help(object) 1&gt;&gt;&gt; help(int) dir(object) 12&gt;&gt;&gt; dir(int)[&#x27;__abs__&#x27;, &#x27;__add__&#x27;, &#x27;__and__&#x27;, &#x27;__class__&#x27;,...] doc 1int.__doc__ 3.简明语法0.文件编码1# -*- coding: UTF-8 -*- 1.列表1mylist = [&quot;list item&quot;, “hello”,4.2] 2.字典1mydict = &#123;&quot;Key&quot;: &quot;Value&quot;, 2: 4, &quot;pi&quot;: 3.1415&#125; 3.元组1mytuple = (1, 2, 3) 4.字符串123456#使用单引号或双引号标示#多行使用三个单引号或双引号标示str = &quot;&quot;&quot;This isa multilinestring.&quot;&quot;&quot; 5.流程控制5.1 if…elif…else5.2 for…in…5.3 while…pase12345678910111213141516for number in rangelist: if number in (3, 4, 7, 9): break else: continueelse passif x == 1: print &quot;x=1&quot;elif x == 2: print &quot;x=2&quot;else print &quot;x=3&quot; while x == 3: pass 6.函数1234567#def name(parm1,parm2=...,...):#returndef function_1(a_str, an_int=2): a_str += &quot; is a new string&quot; an_int = 4 return a_str, an_intprint function_1(&quot;string2&quot;,3) 7.类12345678910#class name(parm):class MyClass(object): common = 10 def __init__(self): self.myvariable = 3 def myfunction(self, arg1, arg2): return self.myvariableclassinstance = MyClass()classinstance.myfunction(1, 2)print classinstance.common 8.异常123456789def some_function(): try: 10 / 0 except ZeroDivisionError: print &quot;Oops, invalid.&quot; else: pass finally: print &quot;We&#x27;re done with that.&quot;","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/tags/python/"}]},{"title":"通信协议初学","slug":"tcp-ip-socket","date":"2015-12-17T02:26:04.000Z","updated":"2015-12-17T06:24:28.000Z","comments":true,"path":"2015/12/17/tcp-ip-socket/","link":"","permalink":"http://youxiafuture.github.io/2015/12/17/tcp-ip-socket/","excerpt":"","text":"TCP&#x2F;IP IP协议对应于网络层，TCP协议对应于传输层（ISO-OSI的七层协议经典架构） TCP&#x2F;IP协议族，最上面的是应用层，http／ftp等；第二层是传输层，TCP&#x2F;UDP；第三层是网络层，IP协议；其余，第四层是数据链路层，加入以太网协议，进行CRC编码，为数据传输做准备；硬件层，负责网络的传输 TCP协议概述 既然大家都使用 TCP 协议，那么大家的连接和断开，都要遵循 TCP 协议中的三次握手和四次握手 ，只是在连接之后发送的内容不同，或者是断开的时间不同。 Socket Socket是对TCP&#x2F;IP协议的封装，函数接口 连接过程分为三个步骤：服务器监听，客户端请求，连接确认 HTTP HTTP协议是建立在TCP协议之上的一种应用,应用层 Socket是应用层与TCP&#x2F;IP协议族通信的中间软件抽象层，一组接口，把复杂的TCP&#x2F;IP协议族隐藏在Socket接口后面。所以HTTP就是TCP&#x2F;IP应用层的协议。Socket是他们的软件抽象层。HTTP更易用，socket更灵活。 Websocket 源自浏览器技术 MQTT","categories":[],"tags":[{"name":"tcp/ip","slug":"tcp-ip","permalink":"http://youxiafuture.github.io/tags/tcp-ip/"},{"name":"socket","slug":"socket","permalink":"http://youxiafuture.github.io/tags/socket/"},{"name":"mtqq","slug":"mtqq","permalink":"http://youxiafuture.github.io/tags/mtqq/"}]},{"title":"RaspberryPi使用笔记－001","slug":"install-raspbian","date":"2015-09-07T15:01:56.000Z","updated":"2016-01-06T15:43:19.000Z","comments":true,"path":"2015/09/07/install-raspbian/","link":"","permalink":"http://youxiafuture.github.io/2015/09/07/install-raspbian/","excerpt":"","text":"下载镜像文件","categories":[],"tags":[{"name":"raspberry","slug":"raspberry","permalink":"http://youxiafuture.github.io/tags/raspberry/"}]},{"title":"linux学习笔记－001","slug":"linux-command-note","date":"2015-09-06T10:03:25.000Z","updated":"2016-01-25T03:00:20.000Z","comments":true,"path":"2015/09/06/linux-command-note/","link":"","permalink":"http://youxiafuture.github.io/2015/09/06/linux-command-note/","excerpt":"","text":"","categories":[],"tags":[{"name":"shell","slug":"shell","permalink":"http://youxiafuture.github.io/tags/shell/"},{"name":"linux","slug":"linux","permalink":"http://youxiafuture.github.io/tags/linux/"}]},{"title":"Markdown学习笔记－001","slug":"first","date":"2015-07-21T03:04:14.000Z","updated":"2016-01-06T15:58:06.000Z","comments":true,"path":"2015/07/21/first/","link":"","permalink":"http://youxiafuture.github.io/2015/07/21/first/","excerpt":"","text":"字体斜体粗体 #列表##无序列表 列表1 列表2 ##有序列表 列表1 列表2 ##嵌套列表 列表1 列表2 列表3 内容 列表4 ##链接 文字:我的博客 图片: 索引: [地址1][1] ![地址2][2][1]:http://www.zhihu.com[2]:https://ss0.baidu.com/9vo3dSag_xI4khGko9WTAnF6hhy/image/h%3D200/sign=78b6edcdca177f3e0f34fb0d40ce3bb9/faedab64034f78f05e48e5887a310a55b3191c0d.jpg 地址: http://sina.com.cn ##代码高亮 1234Panel p = new Panel();p.setLayout(new BorderLayout());p.add(new Button(&quot;Okay&quot;), BorderLayout.SOUTH);","categories":[],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://youxiafuture.github.io/tags/Markdown/"}]},{"title":"Hello World","slug":"hello-world","date":"2015-07-16T15:25:17.000Z","updated":"2015-07-16T15:25:17.000Z","comments":true,"path":"2015/07/16/hello-world/","link":"","permalink":"http://youxiafuture.github.io/2015/07/16/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"git","slug":"git","permalink":"http://youxiafuture.github.io/categories/git/"},{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/categories/python/"}],"tags":[{"name":"nat","slug":"nat","permalink":"http://youxiafuture.github.io/tags/nat/"},{"name":"iptables","slug":"iptables","permalink":"http://youxiafuture.github.io/tags/iptables/"},{"name":"network","slug":"network","permalink":"http://youxiafuture.github.io/tags/network/"},{"name":"git","slug":"git","permalink":"http://youxiafuture.github.io/tags/git/"},{"name":"shell","slug":"shell","permalink":"http://youxiafuture.github.io/tags/shell/"},{"name":"python","slug":"python","permalink":"http://youxiafuture.github.io/tags/python/"},{"name":"Data mining","slug":"Data-mining","permalink":"http://youxiafuture.github.io/tags/Data-mining/"},{"name":"emacs","slug":"emacs","permalink":"http://youxiafuture.github.io/tags/emacs/"},{"name":"vi","slug":"vi","permalink":"http://youxiafuture.github.io/tags/vi/"},{"name":"tcp/ip","slug":"tcp-ip","permalink":"http://youxiafuture.github.io/tags/tcp-ip/"},{"name":"socket","slug":"socket","permalink":"http://youxiafuture.github.io/tags/socket/"},{"name":"mtqq","slug":"mtqq","permalink":"http://youxiafuture.github.io/tags/mtqq/"},{"name":"raspberry","slug":"raspberry","permalink":"http://youxiafuture.github.io/tags/raspberry/"},{"name":"linux","slug":"linux","permalink":"http://youxiafuture.github.io/tags/linux/"},{"name":"Markdown","slug":"Markdown","permalink":"http://youxiafuture.github.io/tags/Markdown/"}]}